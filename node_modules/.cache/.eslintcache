[{"C:\\Users\\Acer\\Desktop\\zavrsni\\src\\index.js":"1","C:\\Users\\Acer\\Desktop\\zavrsni\\src\\App.js":"2","C:\\Users\\Acer\\Desktop\\zavrsni\\src\\reportWebVitals.js":"3","C:\\Users\\Acer\\Desktop\\zavrsni\\src\\sorts\\bubble.js":"4","C:\\Users\\Acer\\Desktop\\zavrsni\\src\\sorts\\insertion.js":"5","C:\\Users\\Acer\\Desktop\\zavrsni\\src\\sorts\\selection.js":"6","C:\\Users\\Acer\\Desktop\\zavrsni\\src\\sorts\\quick.js":"7"},{"size":535,"mtime":1686407162000,"results":"8","hashOfConfig":"9"},{"size":4409,"mtime":1688126097770,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1686407162000,"results":"11","hashOfConfig":"9"},{"size":650,"mtime":1688148716815,"results":"12","hashOfConfig":"9"},{"size":1077,"mtime":1688212089475,"results":"13","hashOfConfig":"9"},{"size":1201,"mtime":1688146109405,"results":"14","hashOfConfig":"9"},{"size":1686,"mtime":1688154150975,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"198s8oc",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Acer\\Desktop\\zavrsni\\src\\index.js",[],[],"C:\\Users\\Acer\\Desktop\\zavrsni\\src\\App.js",["38","39","40","41"],[],"import \"./App.css\";\nimport { cloneElement, useEffect, useRef, useState } from \"react\";\nimport bubbleSort from \"./sorts/bubble\";\nimport insertionSort from \"./sorts/insertion\";\nimport selectionSort from \"./sorts/selection\";\nimport quickSort from \"./sorts/quick\";\n\nfunction App() {\n  const speed = 300;\n  const [divSizes, setDivSizes] = useState([]);\n  const [divs, setDivs] = useState([]);\n\n  const [arSize,setArSize] = useState(20);\n\n  const generateDivSizes = () => {\n    const newDivSizes = [];\n    const newDivs = [];\n    \n    for (let i = 0; i < arSize; i++) {\n      const size = Math.floor(Math.random() * arSize) + 10;\n      newDivSizes.push(size);\n      \n      const div = (\n        <div\n          key={i}\n          style={{\n            margin: `0% ${0.1}%`,\n            backgroundColor: \"blue\",\n            width: `${100 / arSize - 2 * 0.1}%`,\n            height: `${size}%`,\n          }}\n        ></div>\n      );\n      \n      newDivs.push(div);\n    }\n    setDivSizes(newDivSizes);\n    setDivs(newDivs);\n  };\n  \n  const generateNearlySorted = () => {\n    const newDivSizes = [];\n    const newDivs = [];\n    for (let i = 0; i < arSize; i++) {\n      const size = Math.floor(Math.random() * arSize) + 10;\n      newDivSizes.push(size);\n    }\n    newDivSizes.sort((a, b) => a - b);\n\n    const numberOfRandoms = arSize * 0.2;\n\n    for (let i = 0; i < numberOfRandoms; i++) {\n      newDivSizes[Math.floor(Math.random() * arSize) + 1] =\n        Math.floor(Math.random() * arSize/2) + 1;\n    }\n\n    for (let i = 0; i < arSize; i++) {\n      const size = newDivSizes[i];\n      const div = (\n        <div\n          key={i}\n          style={{\n            margin: `0% ${0.1}%`,\n            backgroundColor: \"blue\",\n            width: `${100 / arSize - 2 * 0.1}%`,\n            height: `${size}%`,\n          }}\n        ></div>\n      );\n\n      newDivs.push(div);\n    }\n\n    setDivSizes(newDivSizes);\n    setDivs(newDivs);\n  }\n\n  useEffect(() => {\n    generateDivSizes();\n  }, []);\n\n  var delay_time = 10000 / (Math.floor(arSize / 10) * speed);\n  var c_delay = 0;\n\n  const div_update = (cont, height, color) => {\n    window.setTimeout(function () {\n      \n      const updatedStyle = {\n        margin: `0% ${0.1}%`,\n        width: `${100 / arSize - 2 * 0.1}%`,\n        height: `${height}%`,\n        backgroundColor: color,\n      };\n\n      setDivs((prevDivs) => {\n        const newDivs = [...prevDivs];\n        console.log(prevDivs)\n        const index = newDivs.findIndex((div) => div.key === cont?.key);\n        if (index !== -1) {\n          newDivs[index] = cloneElement(newDivs[index], {\n            style: updatedStyle,\n          });\n        }\n        return newDivs;\n      });\n\n    }, (c_delay += delay_time));\n  }\n\n  const onBubbleSort = () => {\n    bubbleSort(arSize, divSizes, divs, div_update);\n  };\n\n  const onInsertionSort = () => {\n    insertionSort(arSize, divSizes, divs, div_update);\n  };\n\n  const onSelectionSort = () => {\n    selectionSort(arSize, divSizes, divs, div_update);\n  };\n\n  const onQuickSort = () => {\n    quickSort(divSizes, divs, div_update, 0, arSize-1);\n  };\n\n\n  return (\n    <>\n      <header>\n        <nav>\n          <div className=\"array-inputs\">\n            <p>Generate New Array</p>\n            \n            <div className=\"array-size\">\n              <button className={arSize==20&&\"highlighted\"} \n                onClick={() => setArSize(20)}>Small Array</button>\n              <button className={arSize==80&&\"highlighted\"} \n                onClick={() => setArSize(80)}>Large Array</button>\n            </div>\n\n            <div className=\"array-type\">\n              <button onClick={() => generateDivSizes()}>Random Array</button>\n              <button onClick={() => generateNearlySorted()}>Nearly Sorted Array</button>\n            </div>\n            \n          </div>\n\n          <div className=\"header-right\">\n            <p className=\"nav-heading\">Sorting Visualizer</p>\n\n            <div className=\"algos\">\n              <button onClick={() => onBubbleSort()}>Bubble</button>\n              <button onClick={() => onInsertionSort()}>Insertion</button>\n              <button onClick={() => onSelectionSort()}>Selection</button>\n              <button onClick={() => onQuickSort()}>Quick</button>\n            </div>\n          </div>\n        </nav>\n      </header>\n\n      <section>\n\n        <div id=\"array_container\">{divs}</div>\n\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\Acer\\Desktop\\zavrsni\\src\\reportWebVitals.js",[],[],"C:\\Users\\Acer\\Desktop\\zavrsni\\src\\sorts\\bubble.js",[],[],"C:\\Users\\Acer\\Desktop\\zavrsni\\src\\sorts\\insertion.js",[],[],"C:\\Users\\Acer\\Desktop\\zavrsni\\src\\sorts\\selection.js",[],[],"C:\\Users\\Acer\\Desktop\\zavrsni\\src\\sorts\\quick.js",[],[],{"ruleId":"42","severity":1,"message":"43","line":2,"column":35,"nodeType":"44","messageId":"45","endLine":2,"endColumn":41},{"ruleId":"46","severity":1,"message":"47","line":80,"column":6,"nodeType":"48","endLine":80,"endColumn":8,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":135,"column":40,"nodeType":"52","messageId":"53","endLine":135,"endColumn":42},{"ruleId":"50","severity":1,"message":"51","line":137,"column":40,"nodeType":"52","messageId":"53","endLine":137,"endColumn":42},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'generateDivSizes'. Either include it or remove the dependency array.","ArrayExpression",["54"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"55","fix":"56"},"Update the dependencies array to be: [generateDivSizes]",{"range":"57","text":"58"},[1966,1968],"[generateDivSizes]"]